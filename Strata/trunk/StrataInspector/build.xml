<project name="Foundation API" default="all" basedir=".">

  	<!-- set global properties for this build -->
	<property name="system" value="Foundation"/>
 	<property name="build.compiler" value="modern"/>
		
	<!-- root directories -->
	<property name="workspace.root" value="${basedir}/.."/>
	<property name="all.root" value="${workspace.root}/${system}All"/>
	<property name="api.root" value="${workspace.root}/${system}Api"/>
	<property name="component.root" value="${api.root}"/>
	<property name="tools.root" value="${workspace.root}/${system}Tools"/>
  	<property name="build.root" location="${component.root}/java/build"/>

	<property name="acegi.root" value="${tools.root}/Acegi/1.0.5"/>
	<property name="java.root" value="${tools.root}/Java/JEE-5_03/jdk"/>
	<property name="junit.root" value="${tools.root}/JUnit/4.4/"/>
	<property name="spring.root" value="${tools.root}/Spring/2.5"/>
	<property name="weblogic.root" value="${tools.root}/WebLogic/10.0/server"/>
	
	<!-- source directories -->
	<property name="src.subsystems" value="${component.root}/java/src/subsystems"/>
	<property name="src.tests" value="${component.root}/java/src/tests"/>
	
	<!-- build directory -->
  	<property name="buildjar.dir" location="${build.root}/${system}ApiJar"/>
  	<property file="${server.root}/etc/build.properties"/>
	
	<!-- lib directories -->
    <property name="component.lib" location="${component.root}/lib"/>
    <property name="all.lib" location="${all.root}/lib"/>
  	<property name="dist" value="${component.lib}"/>
	
	<!-- test report directory -->
	<property name="test.report.dir" value="${build.root}/junitreports"/>
	
	<!-- classpath -->
	<path id="component.classpath">
        <pathelement location="${spring.root}/dist/spring.jar"/>
        <pathelement location="${spring.root}/lib/hibernate/hibernate3.jar"/>
        <pathelement location="${spring.root}/lib/jakarta-commons/commons-logging.jar"/>
        <pathelement location="${spring.root}/lib/log4j/log4j-1.2.14.jar"/>
        <pathelement location="${acegi.root}/acegi-security-1.0.5.jar"/>
        <pathelement location="${javaee.root}/lib/javaee.jar"/>
        <pathelement location="${junit.root}/junit-4.4.jar"/>
    </path>
	
	<!-- outputs -->
	<property name="output.dir" value="${component.lib}"/>
	<property name="outputjar.name" value="${output.dir}/${system}Api.jar"/>

  	<target 
  		name="all" 
  		depends="clean,init,compile_jar,package_jar,run_tests"/>

  	<target name="clean">
    	<delete dir="${buildjar.dir}"/>
  		<delete file="${outputjar.name}"/>
   	</target>

  	<target name="init">
    	<!-- Create the time stamp -->
    	<tstamp/>
    	<!-- Create the build directory structure used by compile
    	and copy the deployment descriptors into it-->
    	<mkdir dir="${build.root}"/>
    	<mkdir dir="${buildjar.dir}"/>
   		<mkdir dir="${test.report.dir}"/>  		
  	</target>

	
  	<!-- Compile helper classes into the build directory (jar preparation) -->
  	<target name="compile_jar">
    	<javac 
    		srcdir="${src.subsystems};${src.tests}" 
    		destdir="${buildjar.dir}"
       		includes="**/*.java">
    		<classpath refid="component.classpath"/>
    	</javac>
  	</target>

  	<!-- Update jar file or create it if it doesn't exist -->
	<target name="package_jar" depends="compile_jar">
  	    <jar 
  	   		jarfile="${outputjar.name}"
  	   		basedir="${buildjar.dir}"
         	update="yes">
  	    </jar>
 	</target>
  		
  	<!-- Run the unit tests -->
  	<target name="run_tests" depends="package_jar">
  		<junit printsummary="true" showoutput="true" haltonfailure="true">
  			<formatter type="brief" usefile="false"/>
  			<formatter type="xml"/>
  			<classpath>
  				<pathelement location="${outputjar.name}"/>
                <path refid="component.classpath"/>
  			</classpath>
  			<test 
  				todir="${test.report.dir}" 
  				name="com.capgroup.aftg.foundation.test.${system}ApiSuite"/>
  		</junit>
  		<junitreport todir="${test.report.dir}">
  			<fileset dir="${test.report.dir}">
  				<include name="TEST-*.xml"/>
  			</fileset>
  			<report format="frames" todir="${test.report.dir}"/>
  		</junitreport>
  	</target>
		
</project>
